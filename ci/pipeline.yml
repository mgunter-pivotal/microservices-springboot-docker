groups:
- name: Build-Deploy
  jobs:
  - generate-version
  - build-venue
  - build-image
  - zero-downtime-deploy

resources:
  - name: shipwright
    type: git
    source:
      uri: git@github.com:mwright-pivotal/microservices-springboot-docker.git
      branch: master
      username: mwright-pivotal
      private_key: ((github-private-key))

  - name: shipwright-releases
    type: github-release
    source:
      user: mwright-pivotal
      repository: shipwright

  - name: demo-image
    type: docker-image
    source:
      repository: harbor.sys.pks.wrightcode.io/shipwright
      tag: latest
      username: admin
      password: p1v0tal
  
  - name: keyval
    type: keyval

  - name: version
    type: git
    source:
      uri: ((app-url))
      branch: ((version-branch))
      private_key: ((github-private-key))
  
  - name: tools
    type: git
    source:
      uri: ((tools-scripts-url))
      branch: ((tools-branch))

jobs:
  - name: zero-downtime-deploy
    plan:
    - get: shipwright-releases
      trigger: true
      passed: [build-image]
    - task: zero-downtime-deploy
      params:
        K8S_CONFIG: {{K8S_CONFIG}}
        APP_NAME: {{APP_NAME}}
      privileged: true
      file: shipwright/ci/tasks/zero-downtime-push.yml
      
  - name: generate-version
    public: true
    plan:
    - aggregate:
      - get: shipwright
      - get: version
      - get: tools
    - task: generate-version
      privileged: true
      file: shipwright/ci/tasks/generate-version/task.yml
      params:
        GIT_EMAIL: ((git-email))
        GIT_NAME: ((git-name))
    - put: version
      params:
        repository: updated-version
    - put: keyval
      params:
        file: keyvalout/keyval.properties

  
  - name: build-image
    plan:
    - get: shipwright-releases
      trigger: false
      passed: [build-venue]
    - task: build-image
      params:
        HARBOR_TARGET_URL: {{HARBOR_TARGET_URL}}
        HARBOR_USERNAME: {{HARBOR_USERNAME}}
        HARBOR_PASSWORD: {{HARBOR_PASSWORD}}
      file: ci/tasks/build-image.yml
    - put: demo-image
      params: {file: shipwright/build-image/demo-image.droplet}

  - name: build-venue
    serial: true
    public: false
    plan:
    - aggregate:
      - get: shipwright
      - get: keyval
        passed:
        - generate-version
        trigger: true
    - task: build-and-upload
      privileged: true
      file: ci/tasks/build-and-upload/task.yml
      params:
        <<: *common-params
    - put: shipwright-releases
      params:
        repository: out
        tag: out/tag
        only_tag: true
    - put: keyval
      params:
        file: keyvalout/keyval.properties 


common-params: &common-params
  _JAVA_OPTIONS: -Djava.security.egd=file:/dev/./urandom
  BUILD_OPTIONS: ((build-options))
  GIT_EMAIL: ((git-email))
  GIT_NAME: ((git-name))
  M2_SETTINGS_REPO_ID: ((m2-settings-repo-id))
  M2_SETTINGS_REPO_PASSWORD: ((m2-settings-repo-password))
  M2_SETTINGS_REPO_USERNAME: ((m2-settings-repo-username))
  PAAS_TYPE: ((paas-type))
  REPO_WITH_BINARIES_FOR_UPLOAD: ((repo-with-binaries-for-upload))
  REPO_WITH_BINARIES: ((repo-with-binaries))
  PIPELINE_DESCRIPTOR: ((pipeline-descriptor))
  PROJECT_NAME: ((project-name))
  PROJECT_TYPE: ((project-type))
  # remove::start[K8S]
  KUBERNETES-MINIKUBE: ((kubernetes-minikube))
